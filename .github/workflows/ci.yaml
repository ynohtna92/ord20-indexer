name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

defaults:
  run:
    shell: bash

env:
  RUSTFLAGS: --deny warnings

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust Toolchain Components
        uses: actions-rs/toolchain@v1
        with:
          components: clippy, rustfmt
          override: true
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Clippy
        run: cargo clippy --all --all-targets

      - name: Format
        run: cargo fmt --all -- --check

  test:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust Toolchain Components
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install PostgreSQL (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          choco install postgresql --version=16 --force --params '/Password:postgres'
          echo 'C:\Program Files\PostgreSQL\16\bin' >> $GITHUB_PATH
          echo 'C:\Program Files\PostgreSQL\16\lib' >> $GITHUB_PATH

      - name: Install PostgreSQL (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install postgresql@16
          brew link postgresql@16 --force

      - uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test --all
